{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "p4pa-organization",
    "description" : "Api and Models",
    "version" : "0.0.1"
  },
  "servers" : [ {
    "url" : "http://localhost",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "BearerAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Broker",
    "description" : "the Broker API"
  }, {
    "name" : "Taxonomy",
    "description" : "the Taxonomy API"
  } ],
  "paths" : {
    "/crud/brokers" : {
      "get" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "get-broker",
        "operationId" : "crud-get-brokers",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page index (0..N)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page to be returned",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelBroker"
                }
              },
              "application/x-spring-data-compact+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelBroker"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "create-broker",
        "operationId" : "crud-create-broker",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrokerRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          }
        }
      }
    },
    "/crud/brokers/search/findByBrokeredOrganizationId" : {
      "get" : {
        "tags" : [ "broker-search-controller" ],
        "operationId" : "crud-brokers-findByBrokeredOrganizationId",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/brokers/search/findByOrgFiscalCode" : {
      "get" : {
        "tags" : [ "broker-search-controller" ],
        "operationId" : "crud-brokers-findByOrgFiscalCode",
        "parameters" : [ {
          "name" : "orgFiscalCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/brokers/{id}" : {
      "get" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "get-broker",
        "operationId" : "crud-get-broker",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "update-broker",
        "operationId" : "crud-update-broker",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrokerRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "delete" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "delete-broker",
        "operationId" : "crud-delete-broker",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "broker-entity-controller" ],
        "description" : "patch-broker",
        "operationId" : "crud-patch-broker",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrokerRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/crud/org-sil-services" : {
      "get" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "get-orgsilservice",
        "operationId" : "crud-get-orgsilservices",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page index (0..N)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page to be returned",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelOrgSilService"
                }
              },
              "application/x-spring-data-compact+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelOrgSilService"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "create-orgsilservice",
        "operationId" : "crud-create-orgsilservice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrgSilServiceRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          }
        }
      }
    },
    "/crud/org-sil-services/{id}" : {
      "get" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "get-orgsilservice",
        "operationId" : "crud-get-orgsilservice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "update-orgsilservice",
        "operationId" : "crud-update-orgsilservice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrgSilServiceRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "delete" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "delete-orgsilservice",
        "operationId" : "crud-delete-orgsilservice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "org-sil-service-entity-controller" ],
        "description" : "patch-orgsilservice",
        "operationId" : "crud-patch-orgsilservice",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrgSilServiceRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/crud/organizations" : {
      "get" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "get-organization",
        "operationId" : "crud-get-organizations",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page index (0..N)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page to be returned",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelOrganization"
                }
              },
              "application/x-spring-data-compact+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelOrganization"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "create-organization",
        "operationId" : "crud-create-organization",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/crud/organizations/search/findByBrokerId" : {
      "get" : {
        "tags" : [ "organization-search-controller" ],
        "operationId" : "crud-organizations-findByBrokerId",
        "parameters" : [ {
          "name" : "brokerId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelOrganization"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/organizations/search/findByIpaCode" : {
      "get" : {
        "tags" : [ "organization-search-controller" ],
        "operationId" : "crud-organizations-findByIpaCode",
        "parameters" : [ {
          "name" : "ipaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/organizations/search/findByOrgFiscalCode" : {
      "get" : {
        "tags" : [ "organization-search-controller" ],
        "operationId" : "crud-organizations-findByOrgFiscalCode",
        "parameters" : [ {
          "name" : "orgFiscalCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/organizations/{id}" : {
      "get" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "get-organization",
        "operationId" : "crud-get-organization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "update-organization",
        "operationId" : "crud-update-organization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "delete" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "delete-organization",
        "operationId" : "crud-delete-organization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "organization-entity-controller" ],
        "description" : "patch-organization",
        "operationId" : "crud-patch-organization",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrganizationRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/crud/profile" : {
      "get" : {
        "tags" : [ "profile-controller" ],
        "operationId" : "crud-profile-profiles",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepresentationModelObject"
                }
              }
            }
          }
        }
      }
    },
    "/crud/profile/brokers" : {
      "get" : {
        "tags" : [ "profile-controller" ],
        "operationId" : "crud-profile-brokers",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/alps+json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/schema+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/crud/profile/org-sil-services" : {
      "get" : {
        "tags" : [ "profile-controller" ],
        "operationId" : "crud-profile-org-sil-services",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/alps+json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/schema+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/crud/profile/organizations" : {
      "get" : {
        "tags" : [ "profile-controller" ],
        "operationId" : "crud-profile-organizations",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/alps+json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/schema+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/crud/profile/taxonomies" : {
      "get" : {
        "tags" : [ "profile-controller" ],
        "operationId" : "crud-profile-taxonomies",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/alps+json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/schema+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/crud/taxonomies" : {
      "get" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "get-taxonomy",
        "operationId" : "crud-get-taxonomys",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Zero-based page index (0..N)",
          "required" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The size of the page to be returned",
          "required" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "default" : 20
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelTaxonomy"
                }
              },
              "application/x-spring-data-compact+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PagedModelTaxonomy"
                }
              },
              "text/uri-list" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "create-taxonomy",
        "operationId" : "crud-create-taxonomy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxonomyRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          }
        }
      }
    },
    "/crud/taxonomies-collection-reason/search/findCollectionReasons" : {
      "get" : {
        "tags" : [ "taxonomy-collection-reason-dto-search-controller" ],
        "operationId" : "crud-taxonomies-collection-reason-findCollectionReasons",
        "parameters" : [ {
          "name" : "organizationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "macroAreaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceTypeCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelTaxonomyCollectionReasonDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies-macro-area/search/findMacroAreaCodes" : {
      "get" : {
        "tags" : [ "taxonomy-macro-area-code-dto-search-controller" ],
        "operationId" : "crud-taxonomies-macro-area-findMacroAreaCodes",
        "parameters" : [ {
          "name" : "organizationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelTaxonomyMacroAreaCodeDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies-organization-types/search/findOrganizationTypes" : {
      "get" : {
        "tags" : [ "taxonomy-organization-type-dto-search-controller" ],
        "operationId" : "crud-taxonomies-organization-types-findOrganizationTypes",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelTaxonomyOrganizationTypeDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies-service-type/search/findServiceTypeCodes" : {
      "get" : {
        "tags" : [ "taxonomy-service-type-code-dto-search-controller" ],
        "operationId" : "crud-taxonomies-service-type-findServiceTypeCodes",
        "parameters" : [ {
          "name" : "organizationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "macroAreaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelTaxonomyServiceTypeCodeDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies-taxonomy-code/search/findTaxonomyCodes" : {
      "get" : {
        "tags" : [ "taxonomy-code-dto-search-controller" ],
        "operationId" : "crud-taxonomies-taxonomy-code-findTaxonomyCodes",
        "parameters" : [ {
          "name" : "organizationType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "macroAreaCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceTypeCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collectionReason",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionModelTaxonomyCodeDTO"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies/search/findByTaxonomyCode" : {
      "get" : {
        "tags" : [ "taxonomy-search-controller" ],
        "operationId" : "crud-taxonomies-findByTaxonomyCode",
        "parameters" : [ {
          "name" : "taxonomyCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/crud/taxonomies/{id}" : {
      "get" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "get-taxonomy",
        "operationId" : "crud-get-taxonomy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "update-taxonomy",
        "operationId" : "crud-update-taxonomy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxonomyRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "delete" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "delete-taxonomy",
        "operationId" : "crud-delete-taxonomy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "patch" : {
        "tags" : [ "taxonomy-entity-controller" ],
        "description" : "patch-taxonomy",
        "operationId" : "crud-patch-taxonomy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaxonomyRequestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/taxonomies/syncTaxonomy" : {
      "get" : {
        "tags" : [ "Taxonomy" ],
        "summary" : "Sync all taxonomies",
        "operationId" : "syncTaxonomies",
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/brokers/apiKey/{brokerId}" : {
      "get" : {
        "tags" : [ "Broker" ],
        "summary" : "Retrieve decrypted API keys for a broker",
        "operationId" : "getBrokerApiKeys",
        "parameters" : [ {
          "name" : "brokerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              },
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              },
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              },
              "application/hal+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrokerApiKeys"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AbstractJsonSchemaPropertyObject" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "readOnly" : {
            "type" : "boolean"
          }
        }
      },
      "Item" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "JsonSchema" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "definitions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Item"
            }
          },
          "type" : {
            "type" : "string"
          },
          "$schema" : {
            "type" : "string"
          }
        }
      },
      "Links" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/Link"
        }
      },
      "RepresentationModelObject" : {
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Broker" : {
        "required" : [ "brokerFiscalCode", "brokerName", "organizationId", "pagoPaInteractionModel", "personalisationFe" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "brokerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "brokerFiscalCode" : {
            "type" : "string"
          },
          "brokerName" : {
            "type" : "string"
          },
          "pagoPaInteractionModel" : {
            "type" : "string",
            "enum" : [ "SYNC", "SYNC_ACA", "SYNC$GPDPRELOAD", "SYNC_ACA$GPDPRELOAD", "ASYNC_GPD" ]
          },
          "stationId" : {
            "type" : "string"
          },
          "broadcastStationId" : {
            "type" : "string"
          },
          "syncKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "gpdKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "acaKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "personalisationFe" : {
            "$ref" : "#/components/schemas/PersonalisationFe"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PageMetadata" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int64"
          },
          "number" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PagedModelBroker" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "brokers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Broker"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "page" : {
            "$ref" : "#/components/schemas/PageMetadata"
          }
        }
      },
      "PersonalisationFe" : {
        "type" : "object",
        "properties" : {
          "headerAssistanceUrl" : {
            "type" : "string"
          },
          "logoFooterImg" : {
            "type" : "string"
          },
          "footerDescText" : {
            "type" : "string"
          },
          "footerPrivacyInfoUrl" : {
            "type" : "string"
          },
          "footerGDPRUrl" : {
            "type" : "string"
          },
          "footerTermsCondUrl" : {
            "type" : "string"
          },
          "footerAccessibilityUrl" : {
            "type" : "string"
          }
        }
      },
      "CollectionModelTaxonomyCodeDTO" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomyCodeDTOes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaxonomyCodeDTO"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TaxonomyCodeDTO" : {
        "type" : "object",
        "properties" : {
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "serviceTypeCode" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "serviceTypeDescription" : {
            "type" : "string"
          },
          "collectionReason" : {
            "type" : "string"
          },
          "taxonomyCode" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelTaxonomyOrganizationTypeDTO" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomyOrganizationTypeDTOes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaxonomyOrganizationTypeDTO"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TaxonomyOrganizationTypeDTO" : {
        "type" : "object",
        "properties" : {
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelTaxonomyServiceTypeCodeDTO" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomyServiceTypeCodeDTOes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaxonomyServiceTypeCodeDTO"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TaxonomyServiceTypeCodeDTO" : {
        "type" : "object",
        "properties" : {
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "serviceTypeCode" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "serviceTypeDescription" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "OrgSilService" : {
        "required" : [ "applicationName", "organizationId" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "orgSilServiceId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "applicationName" : {
            "type" : "string"
          },
          "notifyOutcomePushUrl" : {
            "type" : "string"
          },
          "flagLegacy" : {
            "type" : "boolean"
          },
          "legacyJwtId" : {
            "type" : "string"
          },
          "legacyJwtMail" : {
            "type" : "string"
          },
          "legacyJwtSecretKeyId" : {
            "type" : "string"
          },
          "legacyJwtSecretKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedModelOrgSilService" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "orgSilServices" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/OrgSilService"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "page" : {
            "$ref" : "#/components/schemas/PageMetadata"
          }
        }
      },
      "CollectionModelTaxonomyCollectionReasonDTO" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomyCollectionReasonDTOes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaxonomyCollectionReasonDTO"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TaxonomyCollectionReasonDTO" : {
        "type" : "object",
        "properties" : {
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "serviceTypeCode" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "serviceTypeDescription" : {
            "type" : "string"
          },
          "collectionReason" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelTaxonomyMacroAreaCodeDTO" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomyMacroAreaCodeDTOes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/TaxonomyMacroAreaCodeDTO"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "TaxonomyMacroAreaCodeDTO" : {
        "type" : "object",
        "properties" : {
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "Taxonomy" : {
        "required" : [ "collectionReason", "endDateOfValidity", "macroAreaCode", "macroAreaDescription", "macroAreaName", "organizationType", "organizationTypeDescription", "serviceType", "serviceTypeCode", "serviceTypeDescription", "startDateValidity", "taxonomyCode" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "taxonomyId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "serviceTypeCode" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "serviceTypeDescription" : {
            "type" : "string"
          },
          "collectionReason" : {
            "type" : "string"
          },
          "startDateValidity" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateOfValidity" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taxonomyCode" : {
            "type" : "string"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedModelTaxonomy" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "taxonomies" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Taxonomy"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "page" : {
            "$ref" : "#/components/schemas/PageMetadata"
          }
        }
      },
      "Organization" : {
        "required" : [ "ipaCode", "orgFiscalCode", "orgName", "status" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ipaCode" : {
            "type" : "string"
          },
          "orgFiscalCode" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          },
          "orgTypeCode" : {
            "type" : "string"
          },
          "orgEmail" : {
            "type" : "string"
          },
          "postalIban" : {
            "type" : "string"
          },
          "iban" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "byte"
          },
          "segregationCode" : {
            "type" : "string"
          },
          "cbillInterBankCode" : {
            "type" : "string"
          },
          "orgLogo" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "ACTIVE" ]
          },
          "additionalLanguage" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "brokerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ioApiKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "flagNotifyIo" : {
            "type" : "boolean"
          },
          "flagNotifyOutcomePush" : {
            "type" : "boolean"
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "PagedModelOrganization" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "organizations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          },
          "page" : {
            "$ref" : "#/components/schemas/PageMetadata"
          }
        }
      },
      "CollectionModelOrganization" : {
        "type" : "object",
        "properties" : {
          "_embedded" : {
            "type" : "object",
            "properties" : {
              "organizations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Organization"
                }
              }
            }
          },
          "_links" : {
            "$ref" : "#/components/schemas/Links"
          }
        }
      },
      "BrokerRequestBody" : {
        "required" : [ "brokerFiscalCode", "brokerName", "organizationId", "pagoPaInteractionModel", "personalisationFe" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "brokerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "brokerFiscalCode" : {
            "type" : "string"
          },
          "brokerName" : {
            "type" : "string"
          },
          "pagoPaInteractionModel" : {
            "type" : "string",
            "enum" : [ "SYNC", "SYNC_ACA", "SYNC$GPDPRELOAD", "SYNC_ACA$GPDPRELOAD", "ASYNC_GPD" ]
          },
          "stationId" : {
            "type" : "string"
          },
          "broadcastStationId" : {
            "type" : "string"
          },
          "syncKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "gpdKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "acaKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "personalisationFe" : {
            "$ref" : "#/components/schemas/PersonalisationFe"
          }
        }
      },
      "OrgSilServiceRequestBody" : {
        "required" : [ "applicationName", "organizationId" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "orgSilServiceId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "applicationName" : {
            "type" : "string"
          },
          "notifyOutcomePushUrl" : {
            "type" : "string"
          },
          "flagLegacy" : {
            "type" : "boolean"
          },
          "legacyJwtId" : {
            "type" : "string"
          },
          "legacyJwtMail" : {
            "type" : "string"
          },
          "legacyJwtSecretKeyId" : {
            "type" : "string"
          },
          "legacyJwtSecretKey" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      },
      "OrganizationRequestBody" : {
        "required" : [ "ipaCode", "orgFiscalCode", "orgName", "status" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "organizationId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ipaCode" : {
            "type" : "string"
          },
          "orgFiscalCode" : {
            "type" : "string"
          },
          "orgName" : {
            "type" : "string"
          },
          "orgTypeCode" : {
            "type" : "string"
          },
          "orgEmail" : {
            "type" : "string"
          },
          "postalIban" : {
            "type" : "string"
          },
          "iban" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "byte"
          },
          "segregationCode" : {
            "type" : "string"
          },
          "cbillInterBankCode" : {
            "type" : "string"
          },
          "orgLogo" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "DRAFT", "ACTIVE" ]
          },
          "additionalLanguage" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "brokerId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ioApiKey" : {
            "type" : "string",
            "format" : "byte"
          },
          "flagNotifyIo" : {
            "type" : "boolean"
          },
          "flagNotifyOutcomePush" : {
            "type" : "boolean"
          }
        }
      },
      "TaxonomyRequestBody" : {
        "required" : [ "collectionReason", "endDateOfValidity", "macroAreaCode", "macroAreaDescription", "macroAreaName", "organizationType", "organizationTypeDescription", "serviceType", "serviceTypeCode", "serviceTypeDescription", "startDateValidity", "taxonomyCode" ],
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updateOperatorExternalId" : {
            "type" : "string"
          },
          "taxonomyId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "organizationType" : {
            "type" : "string"
          },
          "organizationTypeDescription" : {
            "type" : "string"
          },
          "macroAreaCode" : {
            "type" : "string"
          },
          "macroAreaName" : {
            "type" : "string"
          },
          "macroAreaDescription" : {
            "type" : "string"
          },
          "serviceTypeCode" : {
            "type" : "string"
          },
          "serviceType" : {
            "type" : "string"
          },
          "serviceTypeDescription" : {
            "type" : "string"
          },
          "collectionReason" : {
            "type" : "string"
          },
          "startDateValidity" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateOfValidity" : {
            "type" : "string",
            "format" : "date-time"
          },
          "taxonomyCode" : {
            "type" : "string"
          }
        }
      },
      "BrokerApiKeys" : {
        "type" : "object",
        "properties" : {
          "syncKey" : {
            "type" : "string"
          },
          "acaKey" : {
            "type" : "string"
          },
          "gpdKey" : {
            "type" : "string"
          }
        }
      },
      "Link" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "hreflang" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "deprecation" : {
            "type" : "string"
          },
          "profile" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "templated" : {
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}